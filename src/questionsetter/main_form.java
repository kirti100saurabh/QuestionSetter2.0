package questionsetter;

import com.sun.jna.platform.win32.Kernel32;
import com.sun.jna.platform.win32.User32;
import com.sun.jna.platform.win32.WinDef;
import com.sun.jna.platform.win32.WinUser;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.ListSelectionModel;
import static java.lang.System.exit;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Random;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.TableModelListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;
import javax.swing.text.NumberFormatter;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;

/**
 *
 * @author Tele-Teach PVT LTD
 */
public class main_form extends javax.swing.JFrame {
public String setterid;
String sett=null;

    /**
     * Creates new form mainform
     * @param id
     */
     
     
    public main_form() {
        initComponents();
//        String setterid=new examlogin().setterid;
//      JOptionPane.showMessageDialog(rootPane, "ID is-"+setterid);
        this.setResizable(false);  
        
        Image icon = Toolkit.getDefaultToolkit().getImage("lib/images/logo.png");  
        this.setIconImage(icon);        
        this.setTitle("East Central Railway | Question Setter Software |");
                Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(screenSize.width, screenSize.height);        
        this.setExtendedState(this.getExtendedState() | this.MAXIMIZED_BOTH);
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_pos_mark = new javax.swing.JTextField(10);
        txt_neg_mark = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_eng_opt_a = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_eng_opt_b = new javax.swing.JTextField();
        txt_eng_opt_c = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_eng_opt_d = new javax.swing.JTextField();
        btn_eng_opt_pic = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btn_eng_opt_a = new javax.swing.JButton();
        btn_eng_opt_b = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        btn_eng_opt_c = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        btn_eng_opt_d = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        textarea_eng_ques = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txt_hnd_opt_a = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txt_hnd_opt_b = new javax.swing.JTextField();
        txt_hnd_opt_c = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txt_hnd_opt_d = new javax.swing.JTextField();
        btn_hnd_opt_pic = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        btn_hnd_opt_a = new javax.swing.JButton();
        btn_hnd_opt_b = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        btn_hnd_opt_c = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        btn_hnd_opt_d = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        texarea_hnd_ques = new javax.swing.JTextArea();
        alert = new javax.swing.JLabel();
        alert1 = new javax.swing.JLabel();
        addsetterid = new javax.swing.JComboBox<String>();
        jLabel32 = new javax.swing.JLabel();
        section = new javax.swing.JComboBox();
        jLabel45 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        xlsformattable = new javax.swing.JTable();
        importbtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        importtable = new javax.swing.JTable();
        selectxlsfile = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel44 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        searchsetter = new javax.swing.JComboBox<String>();
        jLabel34 = new javax.swing.JLabel();
        quesbox = new javax.swing.JComboBox();
        searchquessingle = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewquestiontable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        viewquestion = new javax.swing.JButton();
        viewsetterid = new javax.swing.JComboBox<String>();
        delquestion = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        encviewtable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        encsearchquestion = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        encryptbtn = new javax.swing.JButton();
        enterpass = new javax.swing.JPasswordField();
        jLabel22 = new javax.swing.JLabel();
        reenterpass = new javax.swing.JTextField();
        addanswer = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        encsetterid = new javax.swing.JComboBox<String>();
        reencryptbtn = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Add Question ");

        jButton1.setBackground(new java.awt.Color(255, 102, 102));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 255, 102));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Add Question");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Question Setter ID");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Marks");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Positive Marks");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Negative Marks");

        txt_pos_mark.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pos_markKeyPressed(evt);
            }
        });

        txt_neg_mark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_neg_markActionPerformed(evt);
            }
        });
        txt_neg_mark.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_neg_markKeyPressed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "English Question Panel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 204))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Answer Option");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("A");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("B");

        txt_eng_opt_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_eng_opt_cActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("C");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("D");

        txt_eng_opt_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_eng_opt_dActionPerformed(evt);
            }
        });

        btn_eng_opt_pic.setBackground(new java.awt.Color(0, 51, 255));
        btn_eng_opt_pic.setFont(btn_eng_opt_pic.getFont().deriveFont(btn_eng_opt_pic.getFont().getStyle() | java.awt.Font.BOLD, 13));
        btn_eng_opt_pic.setForeground(new java.awt.Color(255, 255, 255));
        btn_eng_opt_pic.setText("Click here to Add Question Picture");
        btn_eng_opt_pic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eng_opt_picActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setText("Attach Pic if required");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel18.setText("Attach Pic if require");

        btn_eng_opt_a.setBackground(new java.awt.Color(0, 102, 255));
        btn_eng_opt_a.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn_eng_opt_a.setForeground(new java.awt.Color(255, 255, 255));
        btn_eng_opt_a.setText("Click to Add Answer Picture");
        btn_eng_opt_a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eng_opt_aActionPerformed(evt);
            }
        });

        btn_eng_opt_b.setBackground(new java.awt.Color(0, 102, 255));
        btn_eng_opt_b.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn_eng_opt_b.setForeground(new java.awt.Color(255, 255, 255));
        btn_eng_opt_b.setText("Click to Add Answer Picture");
        btn_eng_opt_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eng_opt_bActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel19.setText("Attach Pic if require");
        jLabel19.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        btn_eng_opt_c.setBackground(new java.awt.Color(0, 102, 255));
        btn_eng_opt_c.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn_eng_opt_c.setForeground(new java.awt.Color(255, 255, 255));
        btn_eng_opt_c.setText("Click to Add Answer Picture");
        btn_eng_opt_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eng_opt_cActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel20.setText("Attach Pic if require");
        jLabel20.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        btn_eng_opt_d.setBackground(new java.awt.Color(0, 102, 255));
        btn_eng_opt_d.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn_eng_opt_d.setForeground(new java.awt.Color(255, 255, 255));
        btn_eng_opt_d.setText("Click to Add Answer Picture");
        btn_eng_opt_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eng_opt_dActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel21.setText("Attach Pic if require");
        jLabel21.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        textarea_eng_ques.setColumns(20);
        textarea_eng_ques.setRows(5);
        jScrollPane6.setViewportView(textarea_eng_ques);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(703, 703, 703))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_eng_opt_c, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_eng_opt_c, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(320, 320, 320))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_eng_opt_a, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_eng_opt_a, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(23, 23, 23)
                                        .addComponent(btn_eng_opt_d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_eng_opt_d, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(23, 23, 23)
                                        .addComponent(btn_eng_opt_b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_eng_opt_b, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(323, 323, 323))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(btn_eng_opt_pic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(375, 375, 375)))
                        .addGap(192, 192, 192))))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                    .addGap(175, 175, 175)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_eng_opt_pic, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(txt_eng_opt_a))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txt_eng_opt_b))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_eng_opt_a, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_eng_opt_b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txt_eng_opt_c, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txt_eng_opt_d)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_eng_opt_c, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_eng_opt_d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(30, 30, 30))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addGap(298, 298, 298)))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hindi Question Panel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 204))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel16.setText("Answer Option");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel23.setText("A");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel24.setText("B");

        txt_hnd_opt_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hnd_opt_bActionPerformed(evt);
            }
        });

        txt_hnd_opt_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hnd_opt_cActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel25.setText("C");

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel26.setText("D");

        txt_hnd_opt_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hnd_opt_dActionPerformed(evt);
            }
        });

        btn_hnd_opt_pic.setBackground(new java.awt.Color(0, 51, 255));
        btn_hnd_opt_pic.setFont(btn_hnd_opt_pic.getFont().deriveFont(btn_hnd_opt_pic.getFont().getStyle() | java.awt.Font.BOLD, 13));
        btn_hnd_opt_pic.setForeground(new java.awt.Color(255, 255, 255));
        btn_hnd_opt_pic.setText("Click here to Add Question Picture");
        btn_hnd_opt_pic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hnd_opt_picActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel27.setText("Attach Pic if required");

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel28.setText("Attach Pic if require");

        btn_hnd_opt_a.setBackground(new java.awt.Color(0, 102, 255));
        btn_hnd_opt_a.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn_hnd_opt_a.setForeground(new java.awt.Color(255, 255, 255));
        btn_hnd_opt_a.setText("Click to Add Answer Picture");
        btn_hnd_opt_a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hnd_opt_aActionPerformed(evt);
            }
        });

        btn_hnd_opt_b.setBackground(new java.awt.Color(0, 102, 255));
        btn_hnd_opt_b.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn_hnd_opt_b.setForeground(new java.awt.Color(255, 255, 255));
        btn_hnd_opt_b.setText("Click to Add Answer Picture");
        btn_hnd_opt_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hnd_opt_bActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel29.setText("Attach Pic if require");
        jLabel29.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        btn_hnd_opt_c.setBackground(new java.awt.Color(0, 102, 255));
        btn_hnd_opt_c.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn_hnd_opt_c.setForeground(new java.awt.Color(255, 255, 255));
        btn_hnd_opt_c.setText("Click to Add Answer Picture");
        btn_hnd_opt_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hnd_opt_cActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel30.setText("Attach Pic if require");
        jLabel30.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        btn_hnd_opt_d.setBackground(new java.awt.Color(0, 102, 255));
        btn_hnd_opt_d.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn_hnd_opt_d.setForeground(new java.awt.Color(255, 255, 255));
        btn_hnd_opt_d.setText("Click to Add Answer Picture");
        btn_hnd_opt_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hnd_opt_dActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel31.setText("Attach Pic if require");
        jLabel31.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        texarea_hnd_ques.setColumns(20);
        texarea_hnd_ques.setRows(5);
        jScrollPane7.setViewportView(texarea_hnd_ques);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_hnd_opt_c, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_hnd_opt_c, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(316, 316, 316))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_hnd_opt_a, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_hnd_opt_a, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(7, 7, 7)
                                        .addComponent(btn_hnd_opt_d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_hnd_opt_d, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(7, 7, 7)
                                        .addComponent(btn_hnd_opt_b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_hnd_opt_b, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(6, 6, 6))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(319, 319, 319))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(btn_hnd_opt_pic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(371, 371, 371))
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(16, 16, 16))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
                    .addGap(10, 10, 10)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_hnd_opt_pic, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 21, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_hnd_opt_a, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(txt_hnd_opt_b, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_hnd_opt_a, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_hnd_opt_b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txt_hnd_opt_c, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txt_hnd_opt_d, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_hnd_opt_c, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_hnd_opt_d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(30, 30, 30))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addGap(298, 298, 298)))
        );

        alert.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        alert.setForeground(new java.awt.Color(255, 0, 0));

        alert1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        alert1.setForeground(new java.awt.Color(255, 0, 0));

        addsetterid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1" }));

        jLabel32.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel32.setText("Section");

        section.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C"}));
        section.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionActionPerformed(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 0, 0));
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel45.setText("Don't Turn On Internet Connection Otherwise Software Will Close");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(778, 778, 778))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(801, 801, 801)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addsetterid, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel45))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 670, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 664, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(alert)
                                                .addGap(145, 145, 145)
                                                .addComponent(alert1))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel9)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txt_pos_mark, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jLabel10))
                                                        .addGap(58, 58, 58)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel11)
                                                            .addComponent(txt_neg_mark, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(31, 31, 31)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(section, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(15, 15, 15))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(addsetterid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel45)))
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel32)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pos_mark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_neg_mark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(section, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alert)
                    .addComponent(alert1))
                .addGap(31, 31, 31))
        );

        jTabbedPane6.addTab("Add Question", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Import Various Question Using an Excel File (.xls)");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("Format In Excel");

        xlsformattable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Question Id", "English Question", "Hindi Question", "English Option A", "Hindi Option A", "Englsih Option B", "Hindi Option B", "English Option C", "Hindi Option C", "English Option D", "Hindi Option D", "Positive Marks", "Negative Marks", "Section"
            }
        ));
        jScrollPane3.setViewportView(xlsformattable);

        importbtn.setBackground(new java.awt.Color(0, 153, 255));
        importbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        importbtn.setForeground(new java.awt.Color(255, 255, 255));
        importbtn.setText("Import Question");
        importbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importbtnActionPerformed(evt);
            }
        });

        importtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(importtable);

        selectxlsfile.setBackground(new java.awt.Color(0, 204, 51));
        selectxlsfile.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        selectxlsfile.setText("Click to Select Question File");
        selectxlsfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectxlsfileActionPerformed(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 0, 0));
        jLabel44.setText("*For Section Part, Use A, B or C, i.e., A = Comulsory Question, B = Optional Part 1 & C = Optional Part 2");

        jLabel46.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 0, 0));
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel46.setText("Don't Turn On Internet Connection Otherwise Software Will Close");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(importbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(158, 158, 158)
                .addComponent(selectxlsfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(91, 91, 91))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(690, 690, 690))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane3))
                                .addGap(10, 10, 10)))
                        .addGap(35, 35, 35))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(54, 54, 54))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addGap(7, 7, 7)
                .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectxlsfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34))
        );

        jTabbedPane6.addTab("Import Question ", jPanel3);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jLabel33.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Select Question from Select Box Below");

        searchsetter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1" }));

        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel34.setText("Question Setter ID");

        quesbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        quesbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quesboxActionPerformed(evt);
            }
        });

        searchquessingle.setBackground(new java.awt.Color(0, 204, 102));
        searchquessingle.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchquessingle.setText("Search Question");
        searchquessingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchquessingleActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton4.setBackground(new java.awt.Color(255, 51, 51));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Delete Question");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 255, 51));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Add Question to Select Box");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 0, 0));
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel47.setText("Don't Turn On Internet Connection Otherwise Software Will Close");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(557, 557, 557)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addGap(583, 583, 583))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(quesbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(146, 146, 146))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(searchquessingle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(508, 508, 508))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchsetter, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGap(502, 502, 502)
                                        .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                        .addGap(229, 229, 229)
                                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(471, 471, 471)))))
                        .addGap(49, 49, 49))))
            .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchsetter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34)))
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(quesbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(searchquessingle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addGap(95, 95, 95)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );

        jTabbedPane6.addTab("Search Questions", jPanel9);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        viewquestiontable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        viewquestiontable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(viewquestiontable);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setText("Question Setter ID");

        viewquestion.setBackground(new java.awt.Color(0, 204, 102));
        viewquestion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewquestion.setText("Search All Questions");
        viewquestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewquestionActionPerformed(evt);
            }
        });

        viewsetterid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1" }));

        delquestion.setBackground(new java.awt.Color(255, 102, 102));
        delquestion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        delquestion.setForeground(new java.awt.Color(255, 255, 255));
        delquestion.setText("Delete All Questions");
        delquestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delquestionActionPerformed(evt);
            }
        });

        jLabel50.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 0, 0));
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel50.setText("Don't Turn On Internet Connection Otherwise Software Will Close");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(viewsetterid, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(184, 184, 184)
                        .addComponent(viewquestion, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addGap(99, 99, 99)
                        .addComponent(delquestion, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)))
                .addGap(54, 54, 54))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(viewsetterid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(delquestion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewquestion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel50)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                .addGap(53, 53, 53))
        );

        jTabbedPane6.addTab("View Question ", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        encviewtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(encviewtable);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setText("Question Setter ID");

        encsearchquestion.setBackground(new java.awt.Color(0, 204, 102));
        encsearchquestion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        encsearchquestion.setText("Search Question");
        encsearchquestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encsearchquestionActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel15.setText("Enter password ");

        encryptbtn.setBackground(new java.awt.Color(255, 51, 51));
        encryptbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        encryptbtn.setForeground(new java.awt.Color(255, 255, 255));
        encryptbtn.setText("Encrypt Questions");
        encryptbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptbtnActionPerformed(evt);
            }
        });

        enterpass.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        enterpass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                enterpassKeyTyped(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel22.setText("Re-Enter Password ");

        reenterpass.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        reenterpass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                reenterpassKeyTyped(evt);
            }
        });

        addanswer.setBackground(new java.awt.Color(0, 102, 0));
        addanswer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addanswer.setForeground(new java.awt.Color(255, 255, 255));
        addanswer.setText("Click Here to Add Answer");
        addanswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addanswerActionPerformed(evt);
            }
        });

        encsetterid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1" }));
        encsetterid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encsetteridActionPerformed(evt);
            }
        });

        reencryptbtn.setBackground(new java.awt.Color(255, 51, 51));
        reencryptbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        reencryptbtn.setForeground(new java.awt.Color(255, 255, 255));
        reencryptbtn.setText("Re-Encrypt Questions");
        reencryptbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reencryptbtnActionPerformed(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 0, 0));
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel48.setText("Don't Turn On Internet Connection Otherwise Software Will Close");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(480, 480, 480)
                .addComponent(addanswer, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addGap(541, 541, 541))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(encsetterid, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(encsearchquestion, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel22))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(enterpass, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                            .addComponent(reenterpass))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(encryptbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reencryptbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))))
                .addGap(28, 28, 28))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(encsetterid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(encsearchquestion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(enterpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(encryptbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(reenterpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(reencryptbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(addanswer, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane6.addTab("Encrypt Question", jPanel5);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jLabel35.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Designed & Developed by");

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/teletech-logo.png"))); // NOI18N

        jLabel37.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel37.setText("Software Information");

        jLabel38.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel38.setText("Platform : Java & MS-Access");

        jLabel39.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel39.setText("Version : 2.0");

        jLabel40.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel40.setText("Last Update Date : 20th August 2019");

        jLabel41.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel41.setText("Copyright : Tele-Teach PVT. LTD.");

        jLabel42.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel42.setText("Developed For : East Central Railway, Danapur");

        jLabel43.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/railway.jpeg"))); // NOI18N

        jLabel49.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 0, 0));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel49.setText("Don't Turn On Internet Connection Otherwise Software Will Close");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(262, 262, 262))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(554, 554, 554)
                        .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(445, 445, 445))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(96, 96, 96))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(113, 113, 113))
                            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(143, 143, 143)))
                        .addGap(226, 226, 226)))
                .addGap(154, 154, 154)
                .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(662, 662, 662)
                .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(558, 558, 558))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel49))
                .addGap(18, 18, 18)
                .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(65, 65, 65)
                .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(56, 56, 56))
        );

        jTabbedPane6.addTab("About Software", jPanel10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane6)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane6)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewquestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewquestionActionPerformed
       Connection connection = null;
        Statement statement = null;
        ResultSet rs = null;
 
        // Step 1: Loading or 
        // registering Oracle JDBC driver class
        try {
 
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
        }
        catch(ClassNotFoundException cnfex) {
            ClassNotFoundException err = cnfex;
            JOptionPane.showMessageDialog(rootPane,"Problem in loading or registering MS Access JDBC driver\n"+err);                   
        }
 
        // Step 2: Opening database connection
        try {
 
           
            String dbURL = "jdbc:ucanaccess://"+ msAccDB;             
            
            //connection.setAutoCommit(false);
            
            // Step 2.A: Create and 
            // get connection using DriverManager class
            connection = DriverManager.getConnection(dbURL); 
 
            // Step 2.B: Creating JDBC Statement 
            statement = connection.createStatement();
 
            rs=statement.executeQuery("select * from Question");
            String columnNames[]={"Ques. Id","Eng_Question","Hin_Question","Eng_Option_A","Hin_Option_A","Eng_Option_B","Hin_Option_B","Eng_Option_C","Hin_Option_C","Eng_Option_D","Hin_Option_D","Positive Marks","Negative Marks","Setter ID","Section"};
            DefaultTableModel model = new DefaultTableModel();
	    model.setColumnIdentifiers(columnNames);
            
            viewquestiontable.setModel(model);
            //viewquestiontable.getColumn(2);
            viewquestiontable.setFont(new java.awt.Font("Times New Roman",1,12));
                String quesid="";
                String ques="";
                String option_a="";
                String option_b="";
                String option_c="";
                String option_d="";
                String ques_hin="";
                String option_a_hin="";
                String option_b_hin="";
                String option_c_hin="";
                String option_d_hin="";
                String pos="";
                String neg="";
                String sett2="";
                String sect="";
           
            
            int i =0;
            while(rs.next()){    
                quesid=rs.getString("Question_ID");
                ques=rs.getString("Eng_Que");
                option_a=rs.getString("Eng_A");
                option_b=rs.getString("Eng_B");
                option_c=rs.getString("Eng_C");
                option_d=rs.getString("Eng_D");
                ques_hin=rs.getString("Hin_Que");
                option_a_hin=rs.getString("Hin_A");
                option_b_hin=rs.getString("Hin_B");
                option_c_hin=rs.getString("Hin_C");
                option_d_hin=rs.getString("Hin_D");
                pos=rs.getString("Pos_Mark");
                neg=rs.getString("Neg_Mark");
                sett2=rs.getString("Setter_ID");
                sect=rs.getString("Section");
              model.addRow(new Object[]{quesid, ques, ques_hin, option_a, option_a_hin, option_b, option_b_hin, option_c, option_c_hin, option_d, option_d_hin, pos,neg,sett2,sect});
              i++;
            }
                        if(i <1)
			{
				JOptionPane.showMessageDialog(null, "No Record Found","Error",
						JOptionPane.ERROR_MESSAGE);
			}
			if(i ==1)
			{
			System.out.println(i+" Record Found");
			}
			else
			{
				System.out.println(i+" Records Found");
			}
            
           
            
        }
        catch(SQLException sqlex){
            SQLException err = sqlex;
            JOptionPane.showMessageDialog(rootPane,"Problem in Fetching Data!\n"+err);
        } 
    }//GEN-LAST:event_viewquestionActionPerformed

    private void encsearchquestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encsearchquestionActionPerformed
        Connection connection = null;
        Statement statement = null;
        ResultSet rs = null;
 
        // Step 1: Loading or 
        // registering Oracle JDBC driver class
        try {
 
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
        }
        catch(ClassNotFoundException cnfex) {
            ClassNotFoundException err = cnfex;
            JOptionPane.showMessageDialog(rootPane,"Problem in loading or registering MS Access JDBC driver\n"+err);                   
        }
 
        // Step 2: Opening database connection
        try {
 
           
            String dbURL = "jdbc:ucanaccess://"+ msAccDB;             
            
            //connection.setAutoCommit(false);
            
            // Step 2.A: Create and 
            // get connection using DriverManager class
            connection = DriverManager.getConnection(dbURL); 
 
            // Step 2.B: Creating JDBC Statement 
            statement = connection.createStatement();
 
            rs=statement.executeQuery("select * from Question");
            String columnNames[]={"Ques. Id","Eng_Question","Hin_Question","Eng_Option_A","Hin_Option_A","Eng_Option_B","Hin_Option_B","Eng_Option_C","Hin_Option_C","Eng_Option_D","Hin_Option_D","Positive Marks","Negative Marks","Setter ID","Section"};
            DefaultTableModel model = new DefaultTableModel();
	    model.setColumnIdentifiers(columnNames);
            
            encviewtable.setModel(model);
            //viewquestiontable.getColumn(2);
            encviewtable.setFont(new java.awt.Font("Times New Roman",1,12));
                String quesid="";
                String ques="";
                String option_a="";
                String option_b="";
                String option_c="";
                String option_d="";
                String ques_hin="";
                String option_a_hin="";
                String option_b_hin="";
                String option_c_hin="";
                String option_d_hin="";
                String pos="";
                String neg="";
                String sett2="";
                String sect="";
            
            int i =0;
            while(rs.next()){    
                quesid=rs.getString("Question_ID");
                ques=rs.getString("Eng_Que");
                option_a=rs.getString("Eng_A");
                option_b=rs.getString("Eng_B");
                option_c=rs.getString("Eng_C");
                option_d=rs.getString("Eng_D");
                ques_hin=rs.getString("Hin_Que");
                option_a_hin=rs.getString("Hin_A");
                option_b_hin=rs.getString("Hin_B");
                option_c_hin=rs.getString("Hin_C");
                option_d_hin=rs.getString("Hin_D");
                pos=rs.getString("Pos_Mark");
                neg=rs.getString("Neg_Mark");
                sett2=rs.getString("Setter_ID");
                sect=rs.getString("Section");
              model.addRow(new Object[]{quesid, ques, ques_hin, option_a, option_a_hin, option_b, option_b_hin, option_c, option_c_hin, option_d, option_d_hin, pos,neg,sett2,sect});
              i++;
            }
                        if(i <1)
			{
				JOptionPane.showMessageDialog(null, "No Record Found","Error",
						JOptionPane.ERROR_MESSAGE);
			}
			if(i ==1)
			{
			System.out.println(i+" Record Found");
			}
			else
			{
				System.out.println(i+" Records Found");
			}
            
           
            
        }
        catch(SQLException sqlex){
            SQLException err = sqlex;
            JOptionPane.showMessageDialog(rootPane,"Problem in Fetching Data!\n"+err);
        }
    }//GEN-LAST:event_encsearchquestionActionPerformed

    private void encryptbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptbtnActionPerformed
        Connection connection2 = null;
        Statement statement2 = null;
        ResultSet rs2 = null;
          String encfile2="";
           String stat="";
        // Step 1: Loading or 
        // registering Oracle JDBC driver class
        try {
 
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
        }
        catch(ClassNotFoundException cnfex) {
            ClassNotFoundException err = cnfex;
            JOptionPane.showMessageDialog(rootPane,"Problem in loading or registering MS Access JDBC driver\n"+err);                   
        }
 
        // Step 2: Opening database connection
        try {
 
            
            String dbURL2 = "jdbc:ucanaccess://"+ msAccDB2;             
            
            //connection.setAutoCommit(false);
            
            // Step 2.A: Create and 
            // get connection using DriverManager class
            connection2 = DriverManager.getConnection(dbURL2); 
 
            // Step 2.B: Creating JDBC Statement 
            statement2 = connection2.createStatement();
 
            rs2=statement2.executeQuery("select * from EncTable");  
            int i =0;
            while(rs2.next()){    
                encfile2=rs2.getString("Enc_file");
                stat=rs2.getString("Status");
            } 
        }
        catch(SQLException sqlex){
            SQLException err = sqlex;
            JOptionPane.showMessageDialog(rootPane,"Problem in Inserting Data!\n"+err);
        } 
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd_MM_YYYY");
        String date=dateFormat.format(cal.getTime());        
        String desk=System.getProperty("user.home") + "/Desktop/";
        File outputFile = new File(desk+useridno+date+"_rrbquestion.enc");
       if(encfile2.isEmpty()){
                String rekey=reenterpass.getText();
                String key=enterpass.getText();
                if(key.isEmpty()){
                JOptionPane.showMessageDialog(this, "Please Input a Password!");
                }   else{            
                if(rekey.equals(key)){
                if(outputFile.exists()){
                    JOptionPane.showMessageDialog(this, "Please Delete the previous Encrypted Question File!\n And then proceed for the Action!");
                }
                else{
                int count = enterpass.getText().length();
//                if(count==16){
//                    JOptionPane.showMessageDialog(rootPane, "Please input a password of 16 Digit");
//                }
                             
                
                encfile=desk+useridno+date+"_rrbquestion.enc";
                try {
            Key secretKey = new SecretKeySpec(key.getBytes(), ALGORITHM);
            Cipher cipher = Cipher.getInstance(TRANSFORMATION);
            cipher.init(Cipher.ENCRYPT_MODE, secretKey);
             
            FileOutputStream outputStream;
                    try (FileInputStream inputStream = new FileInputStream(inputFile)) {
                        byte[] inputBytes = new byte[(int) inputFile.length()];
                        inputStream.read(inputBytes);
                        byte[] outputBytes = cipher.doFinal(inputBytes);
                        outputStream = new FileOutputStream(outputFile);
                        outputStream.write(outputBytes);
                    }
            outputStream.close();
             JOptionPane.showMessageDialog(rootPane, "File Encrypted! Stored at:  "+outputFile);
             
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;
        PreparedStatement pst=null;       
        
            try {
 
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
        }
        catch(ClassNotFoundException cnfex) {
            ClassNotFoundException err = cnfex;
            JOptionPane.showMessageDialog(this,"Problem in loading or registering MS Access JDBC driver\n"+err);                   
        }
            try{
                
                 String dbURL = "jdbc:ucanaccess://"+ msAccDB2;
               
               connection = DriverManager.getConnection(dbURL);
                String queryco="insert into EncTable(Enc_File, Status) values (?,?)";
                statement = connection.createStatement();
                pst = connection.prepareStatement(queryco);
            pst.setString(1,encfile);
            pst.setString(2,"1"); 
                pst.execute();
                connection.commit();           
           
            JOptionPane.showMessageDialog(this,"Enc Status Updated!\n");
               
                }                
            catch(SQLException sqlex){
            SQLException err = sqlex;
            JOptionPane.showMessageDialog(this,"Problem in Inserting Data!\n"+err);
        }       
             
        } catch (NoSuchPaddingException | NoSuchAlgorithmException
                | InvalidKeyException | BadPaddingException
                | IllegalBlockSizeException | IOException ex) {
            System.out.println("Error Encrypting file"+ex);
            JOptionPane.showMessageDialog(rootPane, "Error Encrypting file "+ex);
        }
                }    
            }
                else{
                JOptionPane.showMessageDialog(this,"Password Didn't Matched!\n Please Enter Same Password in both Field!");
                }
       }
    }
       else{
           JOptionPane.showMessageDialog(this, "Please Generate Answer for the Previous Question Before Encrypting!");
       }
    }//GEN-LAST:event_encryptbtnActionPerformed

    private void selectxlsfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectxlsfileActionPerformed
                JFileChooser fileChooser;
                String fileName;
                File file;
                fileChooser = new JFileChooser();
                FileNameExtensionFilter filter = new FileNameExtensionFilter("XLS Files", "xls");
                fileChooser.setFileFilter(filter);
                fileChooser.showOpenDialog(this);
                fileChooser.setDialogTitle("Choose Excel File");
                file = fileChooser.getSelectedFile();
                fileName = file.getName();
                file1=file.getAbsolutePath();
                selectxlsfile.setText(fileName);
                if(file1==null){
                 JOptionPane.showMessageDialog(this,"No File Choosen!\n");
                }
                else{
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        
                Sheet sheet = readExcelSheet(file);
                if (sheet != null) {
                    displaySheet(sheet, importtable);
                }
        
                 setCursor(Cursor.getDefaultCursor());
                }
    }//GEN-LAST:event_selectxlsfileActionPerformed

    private void importbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importbtnActionPerformed
       String setterid1,questiontext_en,questiontext_hin,option_a_en,option_b_en,option_c_en,option_d_en,
            option_a_hin,option_b_hin,option_c_hin,option_d_hin,pos,neg,queid,sect;
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;
 
        // Step 1: Loading or 
        // registering Oracle JDBC driver class
        try {
 
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
        }
        catch(ClassNotFoundException cnfex) {
            ClassNotFoundException err = cnfex;
            JOptionPane.showMessageDialog(this,"Problem in loading or registering MS Access JDBC driver\n"+err);                   
        }
 
        // Step 2: Opening database connection
        try {
            String dbURL = "jdbc:ucanaccess://"+ msAccDB;
                int rows=importtable.getRowCount();
                JOptionPane.showMessageDialog(this,"Total Questions(including header, which is not added)="+rows); 
                System.out.println("No of Rows"+rows);
               connection = DriverManager.getConnection(dbURL);
            FileInputStream fquepic=null,fcApic=null,fcBpic=null,fcCpic=null,fcDpic=null,fquepic_hin=null,fcApic_hin=null,fcBpic_hin=null,fcCpic_hin=null,fcDpic_hin=null;
                       
            //English
            if(queimfile!=null){
            fquepic = new FileInputStream(queimfile);}
             if(choiceAimfile!=null){
            fcApic = new FileInputStream(choiceAimfile);}
              if(choiceBimfile!=null){
             fcBpic = new FileInputStream(choiceBimfile);}
               if(choiceCimfile!=null){
            fcCpic = new FileInputStream(choiceCimfile);}
                if(choiceDimfile!=null){
            fcDpic = new FileInputStream(choiceDimfile);}
                //Hindi
            if(queimfile_hin!=null){
            fquepic_hin = new FileInputStream(queimfile_hin);}
             if(choiceAimfile_hin!=null){
            fcApic_hin = new FileInputStream(choiceAimfile_hin);}
              if(choiceBimfile_hin!=null){
             fcBpic_hin = new FileInputStream(choiceBimfile_hin);}
               if(choiceCimfile_hin!=null){
            fcCpic_hin = new FileInputStream(choiceCimfile_hin);}
                if(choiceDimfile_hin!=null){
            fcDpic_hin = new FileInputStream(choiceDimfile_hin);}
            
            //connection.setAutoCommit(false);
            
            // Step 2.A: Create and 
            // get connection using DriverManager class
            connection = DriverManager.getConnection(dbURL); 
 
            // Step 2.B: Creating JDBC Statement 
            statement = connection.createStatement();
 
            PreparedStatement psmt=connection.prepareStatement("insert into Question(Question_ID, Eng_Que, Eng_Que_Pic, Hin_Que, Hin_Que_Pic, Eng_A,"
                    + " Eng_A_Pic, Hin_A, Hin_A_Pic, Eng_B, Eng_B_Pic, Hin_B, Hin_B_Pic, Eng_C, Eng_C_Pic, Hin_C, Hin_C_Pic, Eng_D,"
                    + " Eng_D_Pic, Hin_D, Hin_D_Pic, Pos_Mark, Neg_Mark, Setter_ID, Section) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
           for(int row = 1; row<rows; row++)
                {
                    setterid1 = (String) importtable.getValueAt(row, 0);
                    //ENGLISH FIELDS
                    questiontext_en=(String) importtable.getValueAt(row, 1);            
                    option_a_en=(String) importtable.getValueAt(row, 3);
                    option_b_en=(String) importtable.getValueAt(row, 5);
                    option_c_en=(String) importtable.getValueAt(row, 7);
                    option_d_en=(String) importtable.getValueAt(row, 9);
                //HINDI FIELDS
                    questiontext_hin=(String) importtable.getValueAt(row, 2);
                    option_a_hin=(String) importtable.getValueAt(row, 4);
                    option_b_hin=(String) importtable.getValueAt(row, 6);
                    option_c_hin=(String) importtable.getValueAt(row, 8);
                    option_d_hin=(String) importtable.getValueAt(row, 10);
                //MARKS FIELDS
                    pos=(String) importtable.getValueAt(row, 11);
                    neg=(String) importtable.getValueAt(row, 12);
                //Section
                    sect=(String) importtable.getValueAt(row, 13);
                    if(setterid1.equals("") && questiontext_en.equals("") && option_a_en.equals("") && option_b_en.equals("")
                            && option_c_en.equals("") && option_d_en.equals("") && questiontext_hin.equals("")){
                    
                    }
            queid="QUE";
            queid+=setterid1.substring(setterid1.length() - 2).toUpperCase();
            //queid+=question.substring(question.length() - 2).toUpperCase();
            Random ran=new Random();
            //ran.nextInt(5000);
            int nxt = ran.nextInt(5000); 
            queid+=nxt;
           
            psmt.setString(1,queid);//Question_ID
            psmt.setString(2,questiontext_en);//ENG_Ques
            if(fquepic!=null){
            psmt.setBinaryStream(3,(InputStream)fquepic,(int)queimfile.length());//Image ENg Ques
            }
            else{
                psmt.setNull(3,0);//Image ENg Ques
            }
            psmt.setString(4,questiontext_hin);//Hin Ques
            if(fquepic_hin!=null){
            psmt.setBinaryStream(5,(InputStream)fquepic_hin,(int)queimfile_hin.length());//Image Hin Ques
            }
            else{
                psmt.setNull(5,0);//Image Hin Ques
            }
            //Choices A
            psmt.setString(6,option_a_en);//Choice A ENg
            if(fcApic!=null){
            psmt.setBinaryStream(7,(InputStream)fcApic,(int)choiceAimfile.length());//Image Choice A ENg
            }
            else{
                psmt.setNull(7,0);//Image Choice A ENg
            }
            psmt.setString(8,option_a_hin);//Choice A Hin
            if(fcApic_hin!=null){
            psmt.setBinaryStream(9,(InputStream)fcApic_hin,(int)choiceAimfile_hin.length());// Image Choice A Hin
            }            
            else{
               psmt.setNull(9,0);// Image Choice A Hin
            }
            //Choice B
            psmt.setString(10,option_b_en);//Choice B ENg
            if(fcBpic!=null){
            psmt.setBinaryStream(11,(InputStream)fcBpic,(int)choiceBimfile.length());//Image Choice B ENg
            }
            else{
                psmt.setNull(11,0);//Image Choice B ENg
            }
             psmt.setString(12,option_b_hin);//Choice B Hin
            if(fcBpic_hin!=null){
            psmt.setBinaryStream(13,(InputStream)fcBpic_hin,(int)choiceBimfile_hin.length());//Image Choice B Hin
            }
            else{
                psmt.setNull(13,0);//Image Choice B Hin
            }
            //Choice C
            psmt.setString(14,option_c_en);//Choice C ENg
            if(fcCpic!=null){
            psmt.setBinaryStream(15,(InputStream)fcCpic,(int)choiceCimfile.length());//Image Choice C ENg
            }
            else{
                psmt.setNull(15,0);//Image Choice C ENg
            }
             psmt.setString(16,option_c_hin);//Choice C Hin
            if(fcCpic_hin!=null){
            psmt.setBinaryStream(17,(InputStream)fcCpic_hin,(int)choiceCimfile_hin.length());//Image Choice C Hin
            }
            else{
                psmt.setNull(17,0);//Image Choice C Hin
            }
            //Choice D
            psmt.setString(18,option_d_en);//Choice D ENg
            if(fcDpic!=null){
            psmt.setBinaryStream(19,(InputStream)fcDpic,(int)choiceDimfile.length());//Image Choice D ENg
            }
            else{
                psmt.setNull(19,0);//Image Choice D ENg
            }
             psmt.setString(20,option_d_hin);//Choice D Hin
            if(fcDpic_hin!=null){
            psmt.setBinaryStream(21,(InputStream)fcDpic_hin,(int)choiceDimfile_hin.length());//Image Choice D Hin
            }
            else{
                psmt.setNull(21,0);//Image Choice D Hin
            }
            psmt.setString(22,pos);
            psmt.setString(23,neg);
            psmt.setString(24,setterid1);
            psmt.setString(25,sect);
            psmt.addBatch();
            //psmt.executeUpdate();
           }
            psmt.executeBatch();
            connection.commit();  
            
            JOptionPane.showMessageDialog(this,"Question Added Successfully!\n");
        }
        catch(SQLException sqlex){
            SQLException err = sqlex;
            JOptionPane.showMessageDialog(this,"Problem in Inserting Question!\n"+err);
        }       catch (FileNotFoundException ex) {
                    Logger.getLogger(main_form.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this,"File not Found!\n"+ex);
                }
    }//GEN-LAST:event_importbtnActionPerformed

    private void btn_hnd_opt_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hnd_opt_cActionPerformed
            JFileChooser quefileChooser;
            String queimfilename;                       
            
            quefileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPEG, BMP & JPG Files", "png", "jpeg", "bmp", "jpg");            
            quefileChooser.setFileFilter(filter);
            quefileChooser.showOpenDialog(this);
            quefileChooser.setDialogTitle("Choose Image File");
            choiceCimfile_hin = quefileChooser.getSelectedFile();
            queimfilename = choiceCimfile_hin.getName();
    }//GEN-LAST:event_btn_hnd_opt_cActionPerformed

    private void txt_hnd_opt_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hnd_opt_dActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hnd_opt_dActionPerformed

    private void txt_hnd_opt_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hnd_opt_cActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hnd_opt_cActionPerformed

    private void btn_eng_opt_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eng_opt_cActionPerformed
           JFileChooser quefileChooser;
            String queimfilename;                       
            
            quefileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPEG, BMP & JPG Files", "png", "jpeg", "bmp", "jpg");            
            quefileChooser.setFileFilter(filter);
            quefileChooser.showOpenDialog(this);
            quefileChooser.setDialogTitle("Choose Image File");
            choiceCimfile = quefileChooser.getSelectedFile();
            queimfilename = choiceCimfile.getName();
         
    }//GEN-LAST:event_btn_eng_opt_cActionPerformed

    private void txt_eng_opt_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_eng_opt_dActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_eng_opt_dActionPerformed

    private void txt_eng_opt_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_eng_opt_cActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_eng_opt_cActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //ENGLISH FIELDS
            texarea_hnd_ques.setText("");            
            txt_eng_opt_a.setText("");
            txt_eng_opt_b.setText("");
            txt_eng_opt_c.setText("");
            txt_eng_opt_d.setText("");
        //HINDI FIELDS
            textarea_eng_ques.setText("");
            txt_hnd_opt_a.setText("");
            txt_hnd_opt_b.setText("");
            txt_hnd_opt_c.setText("");
            txt_hnd_opt_d.setText("");
        //MARKS FIELDS
            txt_neg_mark.setText("");
            txt_pos_mark.setText("");   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_hnd_opt_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hnd_opt_bActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hnd_opt_bActionPerformed

    private void txt_neg_markActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_neg_markActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_neg_markActionPerformed

    private void txt_pos_markKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pos_markKeyPressed
       try{
           float i = Float.parseFloat(txt_pos_mark.getText());
           alert.setText("");
       }catch(NumberFormatException e){
           alert.setText("Enter Valid Decimal Number");
       }
    }//GEN-LAST:event_txt_pos_markKeyPressed

    private void txt_neg_markKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_neg_markKeyPressed
        try{
           float i = Float.parseFloat(txt_neg_mark.getText());
           alert1.setText("");
       }catch(NumberFormatException e){
           alert1.setText("Enter Valid Decimal Number");
       }
    }//GEN-LAST:event_txt_neg_markKeyPressed

    private void encsetteridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encsetteridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_encsetteridActionPerformed

    private void sectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sectionActionPerformed

    private void btn_eng_opt_picActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eng_opt_picActionPerformed
       JFileChooser quefileChooser;
            String queimfilename;                       
            
            quefileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPEG, BMP & JPG Files", "png", "jpeg", "bmp", "jpg");            
            quefileChooser.setFileFilter(filter);
            quefileChooser.showOpenDialog(this);
            quefileChooser.setDialogTitle("Choose Image File");
            queimfile = quefileChooser.getSelectedFile();
            queimfilename = queimfile.getName();
    }//GEN-LAST:event_btn_eng_opt_picActionPerformed

    private void delquestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delquestionActionPerformed
        /*
        DELETE ALL QUESTIONS
        
        CODE LEFT TO BE ADDED
        
        */
    }//GEN-LAST:event_delquestionActionPerformed

    private void reencryptbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reencryptbtnActionPerformed
        /*
        ReEncrypt Questions
        
        CODE LEFT TO BE ADDED
        
        */
    }//GEN-LAST:event_reencryptbtnActionPerformed

    private void searchquessingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchquessingleActionPerformed
       /*
        SEARCH SINGLE QUESTION
        
        CODE LEFT TO BE ADDED
        
        */
    }//GEN-LAST:event_searchquessingleActionPerformed

    private void quesboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quesboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quesboxActionPerformed

    private void btn_eng_opt_aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eng_opt_aActionPerformed
        JFileChooser quefileChooser;
        String queimfilename;                       
            
        quefileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPEG, BMP & JPG Files", "png", "jpeg", "bmp", "jpg");            
        quefileChooser.setFileFilter(filter);
        quefileChooser.showOpenDialog(this);
        quefileChooser.setDialogTitle("Choose Image File");
        choiceAimfile = quefileChooser.getSelectedFile();
        queimfilename = choiceAimfile.getName();
    }//GEN-LAST:event_btn_eng_opt_aActionPerformed

    private void btn_eng_opt_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eng_opt_bActionPerformed
        JFileChooser quefileChooser;
        String queimfilename;                       
            
        quefileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPEG, BMP & JPG Files", "png", "jpeg", "bmp", "jpg");            
        quefileChooser.setFileFilter(filter);
        quefileChooser.showOpenDialog(this);
        quefileChooser.setDialogTitle("Choose Image File");
        choiceBimfile = quefileChooser.getSelectedFile();
        queimfilename = choiceBimfile.getName();
    }//GEN-LAST:event_btn_eng_opt_bActionPerformed

    private void btn_eng_opt_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eng_opt_dActionPerformed
        JFileChooser quefileChooser;
            String queimfilename;                       
            
            quefileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPEG, BMP & JPG Files", "png", "jpeg", "bmp", "jpg");            
            quefileChooser.setFileFilter(filter);
            quefileChooser.showOpenDialog(this);
            quefileChooser.setDialogTitle("Choose Image File");
            choiceDimfile = quefileChooser.getSelectedFile();
            queimfilename = choiceDimfile.getName();
    }//GEN-LAST:event_btn_eng_opt_dActionPerformed

    private void btn_hnd_opt_picActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hnd_opt_picActionPerformed
            JFileChooser quefileChooser;
            String queimfilename;                       
            
            quefileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPEG, BMP & JPG Files", "png", "jpeg", "bmp", "jpg");            
            quefileChooser.setFileFilter(filter);
            quefileChooser.showOpenDialog(this);
            quefileChooser.setDialogTitle("Choose Image File");
            queimfile_hin = quefileChooser.getSelectedFile();
            queimfilename = queimfile_hin.getName();
    }//GEN-LAST:event_btn_hnd_opt_picActionPerformed

    private void btn_hnd_opt_aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hnd_opt_aActionPerformed
            JFileChooser quefileChooser;
            String queimfilename;                       
            
            quefileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPEG, BMP & JPG Files", "png", "jpeg", "bmp", "jpg");            
            quefileChooser.setFileFilter(filter);
            quefileChooser.showOpenDialog(this);
            quefileChooser.setDialogTitle("Choose Image File");
            choiceAimfile_hin = quefileChooser.getSelectedFile();
            queimfilename = choiceAimfile_hin.getName();
    }//GEN-LAST:event_btn_hnd_opt_aActionPerformed

    private void btn_hnd_opt_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hnd_opt_bActionPerformed
            JFileChooser quefileChooser;
            String queimfilename;                       
            
            quefileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPEG, BMP & JPG Files", "png", "jpeg", "bmp", "jpg");            
            quefileChooser.setFileFilter(filter);
            quefileChooser.showOpenDialog(this);
            quefileChooser.setDialogTitle("Choose Image File");
            choiceBimfile_hin = quefileChooser.getSelectedFile();
            queimfilename = choiceBimfile_hin.getName();
    }//GEN-LAST:event_btn_hnd_opt_bActionPerformed

    private void btn_hnd_opt_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hnd_opt_dActionPerformed
            JFileChooser quefileChooser;
            String queimfilename;                       
            
            quefileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPEG, BMP & JPG Files", "png", "jpeg", "bmp", "jpg");            
            quefileChooser.setFileFilter(filter);
            quefileChooser.showOpenDialog(this);
            quefileChooser.setDialogTitle("Choose Image File");
            choiceDimfile_hin = quefileChooser.getSelectedFile();
            queimfilename = choiceDimfile_hin.getName();
    }//GEN-LAST:event_btn_hnd_opt_dActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String setterid1,questiontext_en,questiontext_hin,option_a_en,option_b_en,option_c_en,option_d_en,
                option_a_hin,option_b_hin,option_c_hin,option_d_hin,pos,neg,queid,sect;

            setterid1 = addsetterid.getSelectedItem().toString();
            //ENGLISH FIELDS
            questiontext_en=textarea_eng_ques.getText();            
            option_a_en=txt_eng_opt_a.getText();
            option_b_en=txt_eng_opt_b.getText();
            option_c_en=txt_eng_opt_c.getText();
            option_d_en=txt_eng_opt_d.getText();
        //HINDI FIELDS
            questiontext_hin=texarea_hnd_ques.getText();
            option_a_hin=txt_hnd_opt_a.getText();
            option_b_hin=txt_hnd_opt_b.getText();
            option_c_hin=txt_hnd_opt_c.getText();
            option_d_hin=txt_hnd_opt_d.getText();
        //MARKS FIELDS
            neg=txt_neg_mark.getText();
            pos=txt_pos_mark.getText();
        //Section
            sect=section.getSelectedItem().toString();
            
            if(questiontext_en.equals("") || setterid1 == null || option_a_en.equals("") || option_b_en.equals("") 
                    || option_c_en.equals("") || option_d_en.equals("") || questiontext_hin.equals("") || option_a_hin.equals("")
                    || option_b_hin.equals("") || option_c_hin.equals("") || option_d_hin.equals("") ||pos.equals("")
                    || neg.equals("")){
               JOptionPane.showMessageDialog(this,"Please fill in all the Details Properly!\n Or \n Please Select Setter ID Properly!"); 
            }
            else {
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;
 
        // Step 1: Loading or 
        // registering Oracle JDBC driver class
        try {
 
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
        }
        catch(ClassNotFoundException cnfex) {
            ClassNotFoundException err = cnfex;
            JOptionPane.showMessageDialog(this,"Problem in loading or registering MS Access JDBC driver\n"+err);                   
        }
 
        // Step 2: Opening database connection
        try {
            FileInputStream fquepic=null,fcApic=null,fcBpic=null,fcCpic=null,fcDpic=null,fquepic_hin=null,fcApic_hin=null,fcBpic_hin=null,fcCpic_hin=null,fcDpic_hin=null;
           
            String dbURL = "jdbc:ucanaccess://"+ msAccDB;
            //English
            if(queimfile!=null){
            fquepic = new FileInputStream(queimfile);}
             if(choiceAimfile!=null){
            fcApic = new FileInputStream(choiceAimfile);}
              if(choiceBimfile!=null){
             fcBpic = new FileInputStream(choiceBimfile);}
               if(choiceCimfile!=null){
            fcCpic = new FileInputStream(choiceCimfile);}
                if(choiceDimfile!=null){
            fcDpic = new FileInputStream(choiceDimfile);}
                //Hindi
            if(queimfile_hin!=null){
            fquepic_hin = new FileInputStream(queimfile_hin);}
             if(choiceAimfile_hin!=null){
            fcApic_hin = new FileInputStream(choiceAimfile_hin);}
              if(choiceBimfile_hin!=null){
             fcBpic_hin = new FileInputStream(choiceBimfile_hin);}
               if(choiceCimfile_hin!=null){
            fcCpic_hin = new FileInputStream(choiceCimfile_hin);}
                if(choiceDimfile_hin!=null){
            fcDpic_hin = new FileInputStream(choiceDimfile_hin);}
            
            //connection.setAutoCommit(false);
            
            // Step 2.A: Create and 
            // get connection using DriverManager class
            connection = DriverManager.getConnection(dbURL); 
 
            // Step 2.B: Creating JDBC Statement 
            statement = connection.createStatement();
 
            PreparedStatement psmt=connection.prepareStatement("insert into Question(Question_ID, Eng_Que, Eng_Que_Pic, Hin_Que, Hin_Que_Pic, Eng_A,"
                    + " Eng_A_Pic, Hin_A, Hin_A_Pic, Eng_B, Eng_B_Pic, Hin_B, Hin_B_Pic, Eng_C, Eng_C_Pic, Hin_C, Hin_C_Pic, Eng_D,"
                    + " Eng_D_Pic, Hin_D, Hin_D_Pic, Pos_Mark, Neg_Mark, Setter_ID, Section) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
           
            queid="QUE";
            queid+=setterid1.substring(setterid1.length() - 2).toUpperCase();
            //queid+=question.substring(question.length() - 2).toUpperCase();
            Random ran=new Random();
            //ran.nextInt(5000);
            int nxt = ran.nextInt(5000); 
            queid+=nxt;
           
            psmt.setString(1,queid);//Question_ID
            psmt.setString(2,questiontext_en);//ENG_Ques
            if(fquepic!=null){
            psmt.setBinaryStream(3,(InputStream)fquepic,(int)queimfile.length());//Image ENg Ques
            }
            else{
                psmt.setNull(3,0);//Image ENg Ques
            }
            psmt.setString(4,questiontext_hin);//Hin Ques
            if(fquepic_hin!=null){
            psmt.setBinaryStream(5,(InputStream)fquepic_hin,(int)queimfile_hin.length());//Image Hin Ques
            }
            else{
                psmt.setNull(5,0);//Image Hin Ques
            }
            //Choices A
            psmt.setString(6,option_a_en);//Choice A ENg
            if(fcApic!=null){
            psmt.setBinaryStream(7,(InputStream)fcApic,(int)choiceAimfile.length());//Image Choice A ENg
            }
            else{
                psmt.setNull(7,0);//Image Choice A ENg
            }
            psmt.setString(8,option_a_hin);//Choice A Hin
            if(fcApic_hin!=null){
            psmt.setBinaryStream(9,(InputStream)fcApic_hin,(int)choiceAimfile_hin.length());// Image Choice A Hin
            }            
            else{
               psmt.setNull(9,0);// Image Choice A Hin
            }
            //Choice B
            psmt.setString(10,option_b_en);//Choice B ENg
            if(fcBpic!=null){
            psmt.setBinaryStream(11,(InputStream)fcBpic,(int)choiceBimfile.length());//Image Choice B ENg
            }
            else{
                psmt.setNull(11,0);//Image Choice B ENg
            }
             psmt.setString(12,option_b_hin);//Choice B Hin
            if(fcBpic_hin!=null){
            psmt.setBinaryStream(13,(InputStream)fcBpic_hin,(int)choiceBimfile_hin.length());//Image Choice B Hin
            }
            else{
                psmt.setNull(13,0);//Image Choice B Hin
            }
            //Choice C
            psmt.setString(14,option_c_en);//Choice C ENg
            if(fcCpic!=null){
            psmt.setBinaryStream(15,(InputStream)fcCpic,(int)choiceCimfile.length());//Image Choice C ENg
            }
            else{
                psmt.setNull(15,0);//Image Choice C ENg
            }
             psmt.setString(16,option_c_hin);//Choice C Hin
            if(fcCpic_hin!=null){
            psmt.setBinaryStream(17,(InputStream)fcCpic_hin,(int)choiceCimfile_hin.length());//Image Choice C Hin
            }
            else{
                psmt.setNull(17,0);//Image Choice C Hin
            }
            //Choice D
            psmt.setString(18,option_d_en);//Choice D ENg
            if(fcDpic!=null){
            psmt.setBinaryStream(19,(InputStream)fcDpic,(int)choiceDimfile.length());//Image Choice D ENg
            }
            else{
                psmt.setNull(19,0);//Image Choice D ENg
            }
             psmt.setString(20,option_d_hin);//Choice D Hin
            if(fcDpic_hin!=null){
            psmt.setBinaryStream(21,(InputStream)fcDpic_hin,(int)choiceDimfile_hin.length());//Image Choice D Hin
            }
            else{
                psmt.setNull(21,0);//Image Choice D Hin
            }
            psmt.setString(22,pos);
            psmt.setString(23,neg);
            psmt.setString(24,setterid1);
            psmt.setString(25,sect);
            psmt.executeUpdate();
            //connection.commit();
            JOptionPane.showMessageDialog(this,"Question Added Successfully!\n");
        }
        catch(SQLException sqlex){
            SQLException err = sqlex;
            JOptionPane.showMessageDialog(this,"Problem in Inserting Question!\n"+err);
        }       catch (FileNotFoundException ex) {
                    Logger.getLogger(main_form.class.getName()).log(Level.SEVERE, null, ex);
                }
            //ENGLISH FIELDS
            texarea_hnd_ques.setText("");            
            txt_eng_opt_a.setText("");
            txt_eng_opt_b.setText("");
            txt_eng_opt_c.setText("");
            txt_eng_opt_d.setText("");
        //HINDI FIELDS
            textarea_eng_ques.setText("");
            txt_hnd_opt_a.setText("");
            txt_hnd_opt_b.setText("");
            txt_hnd_opt_c.setText("");
            txt_hnd_opt_d.setText("");
        //MARKS FIELDS
            txt_neg_mark.setText("");
            txt_pos_mark.setText("");
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        /*
        ADD QUESTION TO SELECT BOX
        CODE LEFT TO BE ADDED
        
        */
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        /*
        DELETE QUESTION
        CODE LEFT TO BE ADDED
        
        */
    }//GEN-LAST:event_jButton4ActionPerformed

    private void enterpassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enterpassKeyTyped
        if (enterpass.getText().length() >= 16 ) // limit textfield to 16 characters
            evt.consume();
     
    }//GEN-LAST:event_enterpassKeyTyped

    private void reenterpassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reenterpassKeyTyped
        if (reenterpass.getText().length() >= 16 ) // limit textfield to 16 characters
            evt.consume();
    }//GEN-LAST:event_reenterpassKeyTyped

    private void addanswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addanswerActionPerformed
        Connection connection2 = null;
        Statement statement2 = null;
        ResultSet rs2 = null;
          String encfile2="";
           String stat="";
        // Step 1: Loading or 
        // registering Oracle JDBC driver class
        try {
 
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
        }
        catch(ClassNotFoundException cnfex) {
            ClassNotFoundException err = cnfex;
            JOptionPane.showMessageDialog(rootPane,"Problem in loading or registering MS Access JDBC driver\n"+err);                   
        }
 
        // Step 2: Opening database connection
        try {
 
            
            String dbURL2 = "jdbc:ucanaccess://"+ msAccDB2;             
            
            //connection.setAutoCommit(false);
            
            // Step 2.A: Create and 
            // get connection using DriverManager class
            connection2 = DriverManager.getConnection(dbURL2); 
 
            // Step 2.B: Creating JDBC Statement 
            statement2 = connection2.createStatement();
 
            rs2=statement2.executeQuery("select * from EncTable");  
            int i =0;
            while(rs2.next()){    
                encfile2=rs2.getString("Enc_file");
                stat=rs2.getString("Status");
            } 
        }
        catch(SQLException sqlex){
            SQLException err = sqlex;
            JOptionPane.showMessageDialog(rootPane,"Problem in Inserting Data!\n"+err);
        } 
        if(stat.isEmpty()){
        JOptionPane.showMessageDialog(this,"Please Encrypt the file first"+stat);
        }
        else{
            JOptionPane.showMessageDialog(this,"Proceed for Adding Answer!\nEncrypted File is Stored at - \n"+encfile2);
            Answer ans=new Answer();
            this.setVisible(false);
            ans.setVisible(true);
        }  
    }//GEN-LAST:event_addanswerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main_form().setVisible(true);
               
                
            }
        });
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addanswer;
    private javax.swing.JComboBox<String> addsetterid;
    private javax.swing.JLabel alert;
    private javax.swing.JLabel alert1;
    private javax.swing.JButton btn_eng_opt_a;
    private javax.swing.JButton btn_eng_opt_b;
    private javax.swing.JButton btn_eng_opt_c;
    private javax.swing.JButton btn_eng_opt_d;
    private javax.swing.JButton btn_eng_opt_pic;
    private javax.swing.JButton btn_hnd_opt_a;
    private javax.swing.JButton btn_hnd_opt_b;
    private javax.swing.JButton btn_hnd_opt_c;
    private javax.swing.JButton btn_hnd_opt_d;
    private javax.swing.JButton btn_hnd_opt_pic;
    private javax.swing.JButton delquestion;
    private javax.swing.JButton encryptbtn;
    private javax.swing.JButton encsearchquestion;
    private javax.swing.JComboBox<String> encsetterid;
    private javax.swing.JTable encviewtable;
    private javax.swing.JPasswordField enterpass;
    private javax.swing.JButton importbtn;
    private javax.swing.JTable importtable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox quesbox;
    private javax.swing.JButton reencryptbtn;
    private javax.swing.JTextField reenterpass;
    private javax.swing.JButton searchquessingle;
    private javax.swing.JComboBox<String> searchsetter;
    private javax.swing.JComboBox section;
    private javax.swing.JButton selectxlsfile;
    private javax.swing.JTextArea texarea_hnd_ques;
    private javax.swing.JTextArea textarea_eng_ques;
    private javax.swing.JTextField txt_eng_opt_a;
    private javax.swing.JTextField txt_eng_opt_b;
    private javax.swing.JTextField txt_eng_opt_c;
    private javax.swing.JTextField txt_eng_opt_d;
    private javax.swing.JTextField txt_hnd_opt_a;
    private javax.swing.JTextField txt_hnd_opt_b;
    private javax.swing.JTextField txt_hnd_opt_c;
    private javax.swing.JTextField txt_hnd_opt_d;
    private javax.swing.JTextField txt_neg_mark;
    private javax.swing.JTextField txt_pos_mark;
    private javax.swing.JButton viewquestion;
    private javax.swing.JTable viewquestiontable;
    private javax.swing.JComboBox<String> viewsetterid;
    private javax.swing.JTable xlsformattable;
    // End of variables declaration//GEN-END:variables
    String file1,userid,encfile=null;
    String msAccDB = "lib/DB/question_setter.accdb";
    String msAccDB2 = "lib/DB/enc.accdb";
    File inputFile = new File("lib/DB/question_setter.accdb");
    String msAccDB6 = "lib/DB/login.accdb";    
    String useridno;
    private static final String ALGORITHM = "AES";
    private static final String TRANSFORMATION = "AES";
    File choiceAimfile,choiceBimfile,choiceCimfile,choiceDimfile,queimfile,choiceAimfile_hin,choiceBimfile_hin,choiceCimfile_hin,choiceDimfile_hin,queimfile_hin;
   
    private Sheet readExcelSheet(File file) {
        // open excel file (workbook) for reading
        Workbook wbk;
        try {
            wbk = Workbook.getWorkbook(file);
        } catch (Exception ex) {
            JOptionPane message = new JOptionPane(
                    "Can't read excel file " + file.getPath(),
                    JOptionPane.ERROR_MESSAGE);
            return null;
        }
        if (wbk.getNumberOfSheets() <= 0) {
            JOptionPane message = new JOptionPane(
                    "Excel file doesn't have any sheets.",
                    JOptionPane.ERROR_MESSAGE);
            return null;
        }
        // return first sheet
        return wbk.getSheet(0);
    }
    
    private void displaySheet(Sheet sheet, JTable table) {
        importtable.setModel(new main_form.SheetTableModel(sheet));
    }
    private static class SheetTableModel implements TableModel {
        
        private Sheet sheet;
        
        public SheetTableModel(Sheet sheet) {
            this.sheet = sheet;
        }
        
        public int getRowCount() {
            return sheet.getRows();
        }
        
        public int getColumnCount() {
            return sheet.getColumns();
        }
        
        /** Copied from javax.swing.table.AbstractTableModel,
         * to name columns using spreadsheet conventions:
         *  A, B, C, . Z, AA, AB, etc.
         */
        public String getColumnName(int column) {
            String result = "";
            for (; column >= 0; column = column / 26 - 1) {
                result = (char)((char)(column%26)+'A') + result;
            }
            return result;
        }
        
        public Class<?> getColumnClass(int columnIndex) {
            return String.class;
        }
        
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            // table is read only for demo purposes
            return false;
        }
        
        public Object getValueAt(int rowIndex, int columnIndex) {
            Cell cell = sheet.getCell(columnIndex, rowIndex);
            return cell.getContents();
        }
        
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            // no operation, table is read only for demo purposes
        }
        
        public void addTableModelListener(TableModelListener l) {
            // no operation, table is read only for demo purposes
        }
        
        public void removeTableModelListener(TableModelListener l) {
            // no operation, table is read only for demo purposes
        }
        
    }  // end of SheetTableModel
    private static boolean netIsAvailable() {
    try {
        final URL url = new URL("http://www.google.com");
        final URLConnection conn = url.openConnection();
        conn.connect();
        conn.getInputStream().close();
        return false;
   //     return true;
    } catch (MalformedURLException e) {
        throw new RuntimeException(e);
    } catch (IOException e) {
        return false;
    }
    }
    
    private static WinUser.HHOOK hhk;
        private static WinUser.LowLevelKeyboardProc keyboardHook;
        private static User32 lib;
        public static void blockWindowsKey() {
            if (isWindows()) {
                new Thread(() -> {
                    lib = User32.INSTANCE;
                    WinDef.HMODULE hMod = Kernel32.INSTANCE.GetModuleHandle(null);
                    keyboardHook = (int nCode, WinDef.WPARAM wParam, WinUser.KBDLLHOOKSTRUCT info) -> {
                        if (nCode >= 0) {
                            switch (info.vkCode){
                                case 0x5B:
                                case 0x5C:
                                    return new WinDef.LRESULT(1);
                                default: //do nothing
                            }
                        }
                        return lib.CallNextHookEx(hhk, nCode, wParam, info.getPointer());
                    };
                    hhk = lib.SetWindowsHookEx(13, keyboardHook, hMod, 0);
                    
                    // This bit never returns from GetMessage
                    int result;
                    WinUser.MSG msg = new WinUser.MSG();
                    while ((result = lib.GetMessage(msg, null, 0, 0)) != 0) {
                        if (result == -1) {
                            break;
                        } else {
                            lib.TranslateMessage(msg);
                            lib.DispatchMessage(msg);
                        }
                    }
                    lib.UnhookWindowsHookEx(hhk);
                }).start();
            }
        }

        public static void unblockWindowsKey() {
            if (isWindows() && lib != null) {
                lib.UnhookWindowsHookEx(hhk);
            }
        }

        public static boolean isWindows(){
            String os = System.getProperty("os.name").toLowerCase();
            return (os.contains("win"));
        } 
}